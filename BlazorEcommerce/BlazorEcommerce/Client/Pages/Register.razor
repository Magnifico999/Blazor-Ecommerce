@page "/register"
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<PageTitle>Register</PageTitle>
<style>
    body {
        overflow: hidden;
    }

    #hero-img {
        width: 100%;
        height: 490px;
    }

    .full-width-button {
        width: 100%;
    }

    .form-group {
        margin-bottom: 15px;
    }


    input[type="text"],
    input[type="password"] {
        height: 40px;
        width: 100%;
    }

    .btn-outline-success.full-width-button {
        height: 40px;
        width: 100%;
    }
</style>

<div class="row shadow">
    <div class="col-md-6">
        <img src="/images/Register.png" alt="Image" class="w-100" id="hero-img" />
    </div>
    <div class="col-md-6">
        <div class="row">
            <div class="col-md-12">

                <h4 class="text-center">SIGN UP</h4>
                <div class="col-md-8 offset-md-2">
                    <EditForm Model="user" OnValidSubmit="HandleRegistration">
                        <DataAnnotationsValidator />
                        <div class="form-group">
                            <div class="mb-3">
                                <label for="email">Email</label>
                                <InputText id="email" @bind-Value="user.Email" class="form-control" type="text" placeholder="Enter your email" />
                                <ValidationMessage For="@(() => user.Email)" />
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="mb-3">
                                <label for="password">Password</label>
                                <InputText id="password" @bind-Value="user.Password" class="form-control" type="password" placeholder="Enter your password" />
                                <ValidationMessage For="@(() => user.Password)" />
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="mb-3">
                                <label for="confirmPassword">Confirm Password</label>
                                <InputText id="confirmPassword" @bind-Value="user.ConfirmPassword" class="form-control" type="password" placeholder="Confirm your password" />
                                <ValidationMessage For="@(() => user.ConfirmPassword)" />
                            </div>
                        </div>
                        <div class="form-group">
                            <button type="submit" class="btn btn-success full-width-button">SIGN UP</button>
                        </div>
                        <div class="signup-link">
                            <span>Already have an account? </span>
                            <NavLink href="/login">Sign In</NavLink>
                        </div>
                        <div class="@messageCssClass">
                            <span>@message</span>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>
@code {
    UserRegister user = new UserRegister();

    string message = string.Empty;
    string messageCssClass = string.Empty;

    async Task HandleRegistration()
    {
        var result = await AuthService.Register(user);
        message = result.Message;
        if (!result.Success)
            messageCssClass = "text-danger";
        else
            messageCssClass = "text-success";
        NavigationManager.NavigateTo("/login");
    }
}
